import cantantes.*
import Presentacion.*
import lugares.*
import Cancion.*

describe "lucia"{
	
	method tocanLosPimpinela(){
	 return new Presentacion(new Date(20, 04, 2017), lunaPark, #{joaquin, lucia})
	}
	method tocaSola(){
		  return new Presentacion(new Date(20, 04, 2017), lunaPark, #{lucia})
	}
	method cantaLaFamilia(){
		return new Cancion(264 , "Quiero brindar por mi gente sencilla, por el amor brindo por la familia.")
	}
	method cantaCisne(){
		return new Cancion(312, "Hoy el viento se abrió quedó vacío el aire una vez más y el manantial brotó
		 y nadie está aquí y puedo ver que solo estallan las hojas al brillar.")
	}
	method tocarEnElLunaPark(){
	return	new Presentacion(new Date(20, 04, 2017), lunaPark, #{luisAlberto, lucia, joaquin})
	}
	method tocarEnLaTrastienda(){
		return new Presentacion(new Date(15, 11, 2017), trastienda, #{luisAlberto, lucia, joaquin})
	}
	test "Lucia canta en Pimpinela, su habilidad es de 50."{
		assert.equals(50, lucia.habilidad(self.tocanLosPimpinela()))
	}
	test "Lucia canta en el grupo pimpinela, y lanza su carrera como solista dejando dicho grupo. Su habilidad es de 70."{
		assert.equals(70, lucia.habilidad(self.tocaSola()))
	}
	test "Lucia interpreta bien la cancion 'La Familia'."{
		assert.that(lucia.interpretaBien(self.cantaLaFamilia()))
	}
	test "Lucia no interpreta bien la cancion 'Cisne', porque no contiene la palabra 'familia'."{
		assert.notThat(lucia.interpretaBien(self.cantaCisne()))
	}
	test "Lucia hace una presentacion en Luna Park, cobra 500, porque la capacidad del Luna es mayor a 5000."{
		assert.equals(500, lucia.cobra(self.tocarEnElLunaPark()))
	}
	test "Lucias hace una presentacion en La Trastienda, cobra 400 porque la misma tiene una capacidad menor a 5000."{
		assert.equals(400, lucia.cobra(self.tocarEnLaTrastienda()))
	}
}